cmake_minimum_required(VERSION 3.8)
project(my_cpp_pkg)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(example_interfaces REQUIRED)

add_executable(cpp_node src/my_1st_node.cpp)
ament_target_dependencies(cpp_node rclcpp)

add_executable(robot_news_station src/robot_news_station.cpp)
ament_target_dependencies(robot_news_station rclcpp example_interfaces)

add_executable(smartphone src/smartphone.cpp)
ament_target_dependencies(smartphone rclcpp example_interfaces)

add_executable(num_publisher src/number_publisher.cpp)
ament_target_dependencies(num_publisher rclcpp example_interfaces)

add_executable(num_counter src/number_counter.cpp)
ament_target_dependencies(num_counter rclcpp example_interfaces)

add_executable(add_two_server src/add_two_server.cpp)
ament_target_dependencies(add_two_server rclcpp example_interfaces)

add_executable(add_two_client_1 src/add_two_client_1.cpp)
ament_target_dependencies(add_two_client_1 rclcpp example_interfaces)

add_executable(add_two_client_2 src/add_two_client_2.cpp)
ament_target_dependencies(add_two_client_2 rclcpp example_interfaces)

install(TARGETS
  cpp_node
  robot_news_station
  smartphone
  num_publisher
  num_counter
  add_two_server
  add_two_client_1
  add_two_client_2
  DESTINATION lib/${PROJECT_NAME}
)

# if(BUILD_TESTING)
#   find_package(ament_lint_auto REQUIRED)
#   # the following line skips the linter which checks for copyrights
#   # comment the line when a copyright and license is added to all source files
#   set(ament_cmake_copyright_FOUND TRUE)
#   # the following line skips cpplint (only works in a git repo)
#   # comment the line when this package is in a git repo and when
#   # a copyright and license is added to all source files
#   set(ament_cmake_cpplint_FOUND TRUE)
#   ament_lint_auto_find_test_dependencies()
# endif()

ament_package()
